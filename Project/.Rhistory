library(forecast) # Forecasting Functions for Time Series and Linear Models. [1] - https://cran.r-project.org/web/packages/forecast/index.html
library(dLagM) # Distributed lag model.
library(lmtest) # Testing Linear Regression Models. [2] - https://cran.r-project.org/web/packages/lmtest/index.html
library(tidyr)
library(tseries) # Time Series Analysis and Computational Finance.[3] - https://cran.r-project.org/web/packages/tseries/index.html
library(fUnitRoots) # To analyze trends and unit roots in financial time series. [4] - https://cran.r-project.org/web/packages/fUnitRoots/index.html
library(expsmooth) # Forecasting with Exponential Smoothing. [5] - https://cran.r-project.org/web/packages/expsmooth/index.html
library(TSA) # Time Series Analysis.
library(urca) # Unit Root and Cointegration Tests. [7] - https://cran.r-project.org/web/packages/urca/index.html
library(readr)
library(xts)
# Function to check Stationary on the series.
Stationary_Check <- function(x, m1, m2) {
# Analysing trends by plotting ACF and PACF.
par(mfrow = c(1,2))
acf(x, main = m1)
pacf(x, main = m2)
# Lag for ADF test
d = ar(x)$order
# Conducting Augmented Dickey-Fuller test.
adf.test(x, k = d)
}
# Function for residual analysis.
res_analysis <- function(res_m) {
par(mfrow = c(2, 2))
# Scatter plot for model residuals
plot(res_m, type = "b", pch = 19, col = "blue", xlab = "years", ylab = "Standardized Residuals", main = "Plot of Residuals over Time")
abline(h = 0)
# Standard distribution
hist(res_m, xlab = 'Standardized Residuals', freq = FALSE)
curve(dnorm(x, mean = mean(res_m), sd = sd(res_m)), col = "red", lwd = 2, add = TRUE, yaxt = "n")
# QQplot for model residuals
qqnorm(res_m, col = c("blue"))
qqline(res_m)
# Auto-Correlation Plot
acf(res_m, main = "ACF of Standardized Residuals",col=c("blue"))
# Shapiro Wilk test
shapiro.test(res_m)
}
v_RBO_data <- read.csv("RBO.csv", header = TRUE)
head(v_RBO_data)
# Using str() to check the type of each column.
str(v_RBO_data)
colSums(is.na(v_RBO_data))
class(v_RBO_data)
v_RBO_Temp_TS <- ts(v_RBO_data$Temperature, start = c(1984), frequency = 1)
v_RBO_Rainfall_TS <- ts(v_RBO_data$Rainfall, start = c(1984), frequency = 1)
v_RBO_Radiation_TS <- ts(v_RBO_data$Radiation, start = c(1984), frequency = 1)
v_RBO_RelHumidity_TS <- ts(v_RBO_data$RelHumidity, start = c(1984), frequency = 1)
v_RBO_data_TS <- ts(v_RBO_data$RBO, start = c(1984), frequency = 1)
class(v_RBO_Temp_TS)
class(v_RBO_Rainfall_TS)
class(v_RBO_Radiation_TS)
class(v_RBO_RelHumidity_TS)
class(v_RBO_data_TS)
plot(v_RBO_data_TS, type = "b", xlab = "years", ylab = "Rank-based Order similarity metric", main = "Time series plot for yearly Rank-based Order similarity metric from 1984 – 2014 (31 years)", pch = 1)
legend("topright", inset = .03, title = "Rank-based Order similarity metric", legend = "Rank-based Order similarity metric series", horiz = TRUE, cex = 0.8, lty = 1, box.lty = 2, box.lwd = 2, pch = 1)
McLeod.Li.test(y = v_First_Flowering_Day_data_TS, main = "McLeod-Li Test Statistics for Rank-based Order similarity metric.")
McLeod.Li.test(y = v_RBO_data_TS, main = "McLeod-Li Test Statistics for Rank-based Order similarity metric.")
plot(v_RBO_Temp_TS, type = "b", xlab = "years", ylab = "Temperature", main = "Time series plot for yearly temperature from 1984 – 2014 (31 years)", pch = 1)
legend("top", inset = .03, title = "Temperature", legend = "Temperature series", horiz = TRUE, cex = 0.8, lty = 1, box.lty = 2, box.lwd = 2, pch = 1)
McLeod.Li.test(y = v_RBO_Rainfall_TS, main = "McLeod-Li Test Statistics for Temperature")
plot(v_RBO_Rainfall_TS, type = "b", xlab = "years", ylab = "Rainfall", main = "Time series plot for yearly Rainfall from 1984 – 2014 (31 years)", pch = 1)
legend("bottomleft", inset = .03, title = "Rainfall", legend = "Rainfall series", horiz = TRUE, cex = 0.8, lty = 1, box.lty = 2, box.lwd = 2, pch = 1)
McLeod.Li.test(y = v_RBO_Rainfall_TS, main = "McLeod-Li Test Statistics for Rainfall")
plot(v_RBO_Radiation_TS, type = "b", xlab = "years", ylab = "Radiation", main = "Time series plot for yearly Radiation from 1984 – 2014 (31 years)", pch = 1)
legend("topleft", inset = .03, title = "Radiation", legend = "Radiation series", horiz = TRUE, cex = 0.8, lty = 1, box.lty = 2, box.lwd = 2, pch = 1)
McLeod.Li.test(y = v_RBO_Rainfall_TS, main = "McLeod-Li Test Statistics for Radiation")
plot(v_RBO_RelHumidity_TS, type = "b", xlab = "years", ylab = "Relative Humidity", main = "Time series plot for yearly Relative Humidity from 1984 – 2014 (31 years)", pch = 1)
legend("bottomright", inset = .03, title = "Relative Humidity", legend = "Relative Humidity series", horiz = TRUE, cex = 0.8, lty = 1, box.lty = 2, box.lwd = 2, pch = 1)
McLeod.Li.test(y = v_RBO_RelHumidity_TS, main = "McLeod-Li Test Statistics for Relative Humidity")
Stationary_Check(v_RBO_data_TS, "Rank-based Order similarity metric - ACF plot", "Rank-based Order similarity metric - PACF plot")
Stationary_Check(v_RBO_Temp_TS, "Temperature - ACF plot", "Temperature - PACF plot")
Stationary_Check(v_RBO_Radiation_TS, "Radiation - ACF plot", "Radiation - PACF plot")
Stationary_Check(v_RBO_Rainfall_TS, "Rainfall - ACF plot", "Rainfall - PACF plot")
Stationary_Check(v_RBO_RelHumidity_TS, "Relative Humidity - ACF plot", "Relative Humidity - PACF plot")
# Calculating the correlation coefficient
cor(v_RBO_data_TS, v_RBO_Temp_TS)
cor(v_RBO_data_TS, v_RBO_Rainfall_TS)
cor(v_RBO_data_TS, v_RBO_Radiation_TS)
cor(v_RBO_data_TS, v_RBO_RelHumidity_TS)
x1 = v_RBO_Rainfall_TS # Independent variable
x2 = v_RBO_Temp_TS # Independent variable
y = v_RBO_data_TS # Dependent variable
for ( i in 1:10){
model_1 = dlm(x = as.vector(x1) , y = as.vector(y), q = i )
cat("q = ", i, "AIC = ", AIC(model_1$model), "BIC = ", BIC(model_1$model), "MASE =", MASE(model_1)$MASE, "\n")
}
# Finite lag length based on AIC-BIC-MASE
finite_dlm_rain = dlm( x = as.vector(x1) , y = as.vector(y), q = 10)
summary(finite_dlm_rain)
for (i in 1:3){
model_3 <-  polyDlm(x = as.vector(x1), y = as.vector(y), q = i , k = i, show.beta = FALSE)
cat("q = ", i, "k = ", i, "AIC = ", AIC(model_3$model), "BIC = ", BIC(model_3$model), "MASE = ", MASE(model_3)$MASE, "\n")
}
# Ploynomial DLM
PolyDLM_model_Rain = polyDlm(x = as.vector(x1), y = as.vector(y), q = 1, k = 1, show.beta = TRUE)
summary(PolyDLM_model_Rain)
res_analysis(residuals(PolyDLM_model_Rain$model))
# Koyk DLM
Koyck_DLM_Rain = koyckDlm(x = as.vector(x1) , y = as.vector(y))
summary(Koyck_DLM_Rain)
for (i in 1:5){
for(j in 1:5){
model_4 = ardlDlm(x = as.vector(x1) , y = as.vector(y), p = i , q = j )
cat("p = ", i, "q = ", j, "AIC = ", AIC(model_4$model), "BIC = ", BIC(model_4$model), "MASE =", MASE(model_4)$MASE, "\n")
}
}
# ARDLM model
AR_DLM_Rain_53 = ardlDlm(x = as.vector(x1) , y = as.vector(y), p = 5, q = 3)
summary(AR_DLM_Rain_53)
res_analysis(residuals(AR_DLM_Rain_53))
for ( i in 1:10){
model_1 = dlm(x = as.vector(x2) , y = as.vector(y), q = i )
cat("q = ", i, "AIC = ", AIC(model_1$model), "BIC = ", BIC(model_1$model), "MASE =", MASE(model_1)$MASE, "\n")
}
# Finite lag length based on AIC-BIC-MASE
finite_dlm_temp = dlm( x = as.vector(x2) , y = as.vector(y), q = 10)
summary(finite_dlm_temp)
for (i in 1:3){
model_3 <-  polyDlm(x = as.vector(x2), y = as.vector(y), q = i , k = i, show.beta = FALSE)
cat("q = ", i, "k = ", i, "AIC = ", AIC(model_3$model), "BIC = ", BIC(model_3$model), "MASE = ", MASE(model_3)$MASE, "\n")
}
# Ploynomial DLM
PolyDLM_model_temp = polyDlm(x = as.vector(x2), y = as.vector(y), q = 1, k = 1, show.beta = TRUE)
summary(PolyDLM_model_temp)
res_analysis(residuals(PolyDLM_model_temp$model))
# Koyk DLM
Koyck_DLM_temp = koyckDlm(x = as.vector(x2) , y = as.vector(y))
summary(Koyck_DLM_temp)
for (i in 1:5){
for(j in 1:5){
model_4 = ardlDlm(x = as.vector(x2) , y = as.vector(y), p = i , q = j )
cat("p = ", i, "q = ", j, "AIC = ", AIC(model_4$model), "BIC = ", BIC(model_4$model), "MASE =", MASE(model_4)$MASE, "\n")
}
}
# ARDLM model
AR_DLM_temp_52 = ardlDlm(x = as.vector(x2) , y = as.vector(y), p = 5, q = 2)
summary(AR_DLM_temp_52)
res_analysis(residuals(AR_DLM_temp_52))
attr(AR_DLM_Rain_53$model, "class") = "lm"
attr(AR_DLM_temp_52$model, "class") = "lm"
v_model_name <- c("PolyDLM_model_Rain", "AR_DLM_Rain_53", "PolyDLM_model_temp", "AR_DLM_temp_52")
MASE <- MASE(PolyDLM_model_Rain$model, AR_DLM_Rain_53$model, PolyDLM_model_temp$model, AR_DLM_temp_52$model)$MASE
aic <- AIC(PolyDLM_model_Rain$model, AR_DLM_Rain_53$model, PolyDLM_model_temp$model, AR_DLM_temp_52$model)$AIC
bic <- BIC(PolyDLM_model_Rain$model, AR_DLM_Rain_53$model, PolyDLM_model_temp$model, AR_DLM_temp_52$model)$BIC
v_score <- data.frame(v_model_name, MASE, aic, bic)
colnames(v_score) <- c("MODEL_NAME", "MASE", "AIC", "BIC")
v_score
v_rain_dyna <- dynlm(y ~ x4, data = data.frame(v_data_TS_22))
v_data_TS_33 <- ts(v_RBO_data, start = 1984, frequency = 1)
colnames(v_data_TS_33) <- c("x1", "x2", "x3", "x4", "x5", "y")
v_rain_dyna <- dynlm(y ~ x4, data = data.frame(v_data_TS_33))
summary(v_rain_dyna)
View(v_RBO_data)
v_data_TS_33 <- ts(v_RBO_data, start = 1984, frequency = 1)
colnames(v_data_TS_33) <- c("x1", "y", "x2", "x3", "x4", "x5")
v_rain_dyna <- dynlm(y ~ x3, data = data.frame(v_data_TS_33))
summary(v_rain_dyna)
v_rain_dyna <- dynlm(y ~ x3, data = data.frame(v_data_TS_33))
summary(v_rain_dyna)
v_temp_dyna <- dynlm(y ~ x4, data = data.frame(v_data_TS_33))
summary(v_temp_dyna)
v_temp_dyna <- dynlm(y ~ x2, data = data.frame(v_data_TS_33))
summary(v_temp_dyna)
res_analysis(residuals(v_rain_dyna))
h = 3
interval = FALSE
level =0.95
v_RBOr_forecasts_POLY <- forecast.polyDlm(model = PolyDLM_model_temp , x = v_RBO_data_TS, h = h , interval = interval, level = level)
library(dLagM)
h = 3
interval = FALSE
level =0.95
v_RBOr_forecasts_POLY <- forecast.polyDlm(model = PolyDLM_model_temp , x = v_RBO_data_TS, h = h , interval = interval, level = level)
library(dLagM)
h = 3
interval = FALSE
level =0.95
forecast <- function(model , x , h = 1 , interval = FALSE, level =0.95) UseMethod("forecast")
v_RBOr_forecasts_POLY <- forecast.polyDlm(model = PolyDLM_model_temp , x = v_RBO_data_TS, h = h , interval = interval, level = level)
v_RBOr_forecasts_POLY <- forecast(PolyDLM_model_Rain, h=5)
v_RBOr_forecasts_POLY <- forecast.ets(PolyDLM_model_Rain, h=5)
v_RBOr_forecasts_POLY <- forecast.ets(PolyDLM_model_Rain, h = 3)
v_RBO_data_task_b <- tail(v_RBO_data, -13)
v_RBO_data_task_b <- head(v_RBO_data_task_b, -5)
head(v_RBO_data_task_b)
# Using str() to check the type of each column.
str(v_RBO_data_task_b)
colSums(is.na(v_RBO_data_task_b))
class(v_RBO_data_task_b)
v_RBO_Temp_task_b_TS <- ts(v_RBO_data_task_b$Temperature, start = c(1997), frequency = 1)
v_RBO_Rainfall_task_b_TS <- ts(v_RBO_data_task_b$Rainfall, start = c(1997), frequency = 1)
v_RBO_Radiation_task_b_TS <- ts(v_RBO_data_task_b$Radiation, start = c(1997), frequency = 1)
v_RBO_RelHumidity_task_b_TS <- ts(v_RBO_data_task_b$RelHumidity, start = c(1997), frequency = 1)
v_RBO_data_task_b_TS <- ts(v_RBO_data_task_b$RBO, start = c(1997), frequency = 1)
class(v_RBO_Temp_task_b_TS)
class(v_RBO_Rainfall_task_b_TS)
class(v_RBO_Radiation_task_b_TS)
class(v_RBO_RelHumidity_task_b_TS)
class(v_RBO_data_task_b_TS)
plot(v_RBO_data_TS, type = "b", xlab = "years", ylab = "Rank-based Order similarity metric", main = "Time series plot for yearly Rank-based Order similarity metric during the Millennium Drought (1997 – 2009) (13 years)", pch = 1)
legend("topright", inset = .03, title = "Rank-based Order similarity metric", legend = "Rank-based Order similarity metric series", horiz = TRUE, cex = 0.8, lty = 1, box.lty = 2, box.lwd = 2, pch = 1)
McLeod.Li.test(y = v_RBO_data_TS, main = "McLeod-Li Test Statistics for Rank-based Order similarity metric.")
plot(v_RBO_Temp_TS, type = "b", xlab = "years", ylab = "Temperature", main = "Time series plot for yearly temperature during the Millennium Drought (1997 – 2009) (13 years)", pch = 1)
legend("top", inset = .03, title = "Temperature", legend = "Temperature series", horiz = TRUE, cex = 0.8, lty = 1, box.lty = 2, box.lwd = 2, pch = 1)
McLeod.Li.test(y = v_RBO_Rainfall_TS, main = "McLeod-Li Test Statistics for Temperature")
plot(v_RBO_Rainfall_TS, type = "b", xlab = "years", ylab = "Rainfall", main = "Time series plot for yearly Rainfall during the Millennium Drought (1997 – 2009) (13 years)", pch = 1)
legend("bottomleft", inset = .03, title = "Rainfall", legend = "Rainfall series", horiz = TRUE, cex = 0.8, lty = 1, box.lty = 2, box.lwd = 2, pch = 1)
plot(v_RBO_Temp_task_b_TS, type = "b", xlab = "years", ylab = "Rank-based Order similarity metric", main = "Time series plot for yearly Rank-based Order similarity metric during the Millennium Drought (1997 – 2009) (13 years)", pch = 1)
legend("topright", inset = .03, title = "Rank-based Order similarity metric", legend = "Rank-based Order similarity metric series", horiz = TRUE, cex = 0.8, lty = 1, box.lty = 2, box.lwd = 2, pch = 1)
plot(v_RBO_Temp_task_b_TS, type = "b", xlab = "years", ylab = "Rank-based Order similarity metric", main = "Time series plot for yearly Rank-based Order similarity metric during the Millennium Drought (1997 – 2009) (13 years)", pch = 1)
legend("bottom", inset = .03, title = "Rank-based Order similarity metric", legend = "Rank-based Order similarity metric series", horiz = TRUE, cex = 0.8, lty = 1, box.lty = 2, box.lwd = 2, pch = 1)
plot(v_RBO_Temp_task_b_TS, type = "b", xlab = "years", ylab = "Rank-based Order similarity metric", main = "Time series plot for yearly Rank-based Order similarity metric during the Millennium Drought (1997 – 2009) (13 years)", pch = 1)
legend("bottomleft", inset = .03, title = "Rank-based Order similarity metric", legend = "Rank-based Order similarity metric series", horiz = TRUE, cex = 0.8, lty = 1, box.lty = 2, box.lwd = 2, pch = 1)
plot(v_RBO_Temp_task_b_TS, type = "b", xlab = "years", ylab = "Rank-based Order similarity metric", main = "Time series plot for yearly Rank-based Order similarity metric during the Millennium Drought (1997 – 2009) (13 years)", pch = 1)
legend("bottomleft", inset = .03, title = "Rank-based Order similarity metric", legend = "Rank-based Order similarity metric series", horiz = TRUE, cex = 0.8, lty = 1, box.lty = 2, box.lwd = 2, pch = 1)
McLeod.Li.test(y = v_RBO_data_TS, main = "McLeod-Li Test Statistics for Rank-based Order similarity metric.")
plot(v_RBO_Temp_task_b_TS, type = "b", xlab = "years", ylab = "Temperature", main = "Time series plot for yearly temperature during the Millennium Drought (1997 – 2009) (13 years)", pch = 1)
legend("top", inset = .03, title = "Temperature", legend = "Temperature series", horiz = TRUE, cex = 0.8, lty = 1, box.lty = 2, box.lwd = 2, pch = 1)
McLeod.Li.test(y = v_RBO_Temp_task_b_TS, main = "McLeod-Li Test Statistics for Temperature")
plot(v_RBO_data_task_b_TS, type = "b", xlab = "years", ylab = "Rank-based Order similarity metric", main = "Time series plot for yearly Rank-based Order similarity metric during the Millennium Drought (1997 – 2009) (13 years)", pch = 1)
legend("bottomleft", inset = .03, title = "Rank-based Order similarity metric", legend = "Rank-based Order similarity metric series", horiz = TRUE, cex = 0.8, lty = 1, box.lty = 2, box.lwd = 2, pch = 1)
plot(v_RBO_data_task_b_TS, type = "b", xlab = "years", ylab = "Rank-based Order similarity metric", main = "Time series plot for yearly Rank-based Order similarity metric during the Millennium Drought (1997 – 2009) (13 years)", pch = 1)
legend("topleft", inset = .03, title = "Rank-based Order similarity metric", legend = "Rank-based Order similarity metric series", horiz = TRUE, cex = 0.8, lty = 1, box.lty = 2, box.lwd = 2, pch = 1)
McLeod.Li.test(y = v_RBO_data_task_b_TS, main = "McLeod-Li Test Statistics for Rank-based Order similarity metric.")
plot(v_RBO_Rainfall_task_b_TS, type = "b", xlab = "years", ylab = "Rainfall", main = "Time series plot for yearly Rainfall during the Millennium Drought (1997 – 2009) (13 years)", pch = 1)
legend("bottomleft", inset = .03, title = "Rainfall", legend = "Rainfall series", horiz = TRUE, cex = 0.8, lty = 1, box.lty = 2, box.lwd = 2, pch = 1)
plot(v_RBO_Rainfall_task_b_TS, type = "b", xlab = "years", ylab = "Rainfall", main = "Time series plot for yearly Rainfall during the Millennium Drought (1997 – 2009) (13 years)", pch = 1)
legend("bottom", inset = .03, title = "Rainfall", legend = "Rainfall series", horiz = TRUE, cex = 0.8, lty = 1, box.lty = 2, box.lwd = 2, pch = 1)
McLeod.Li.test(y = v_RBO_Rainfall_task_b_TS, main = "McLeod-Li Test Statistics for Rainfall")
plot(v_RBO_Radiation_task_b_TS, type = "b", xlab = "years", ylab = "Radiation", main = "Time series plot for yearly Radiation during the Millennium Drought (1997 – 2009) (13 years)", pch = 1)
legend("topleft", inset = .03, title = "Radiation", legend = "Radiation series", horiz = TRUE, cex = 0.8, lty = 1, box.lty = 2, box.lwd = 2, pch = 1)
McLeod.Li.test(y = v_RBO_Rainfall_task_b_TS, main = "McLeod-Li Test Statistics for Radiation")
McLeod.Li.test(y = v_RBO_Rainfall_task_b_TS, main = "McLeod-Li Test Statistics for Radiation")
plot(v_RBO_RelHumidity_TS, type = "b", xlab = "years", ylab = "Relative Humidity", main = "Time series plot for yearly Relative Humidity during the Millennium Drought (1997 – 2009) (13 years)", pch = 1)
legend("bottomright", inset = .03, title = "Relative Humidity", legend = "Relative Humidity series", horiz = TRUE, cex = 0.8, lty = 1, box.lty = 2, box.lwd = 2, pch = 1)
McLeod.Li.test(y = v_RBO_RelHumidity_TS, main = "McLeod-Li Test Statistics for Relative Humidity")
plot(v_RBO_RelHumidity_task_b_TS, type = "b", xlab = "years", ylab = "Relative Humidity", main = "Time series plot for yearly Relative Humidity during the Millennium Drought (1997 – 2009) (13 years)", pch = 1)
legend("bottomright", inset = .03, title = "Relative Humidity", legend = "Relative Humidity series", horiz = TRUE, cex = 0.8, lty = 1, box.lty = 2, box.lwd = 2, pch = 1)
plot(v_RBO_RelHumidity_task_b_TS, type = "b", xlab = "years", ylab = "Relative Humidity", main = "Time series plot for yearly Relative Humidity during the Millennium Drought (1997 – 2009) (13 years)", pch = 1)
legend("topright", inset = .03, title = "Relative Humidity", legend = "Relative Humidity series", horiz = TRUE, cex = 0.8, lty = 1, box.lty = 2, box.lwd = 2, pch = 1)
Stationary_Check(v_RBO_data_task_b_TS, "Rank-based Order similarity metric - ACF plot", "Rank-based Order similarity metric - PACF plot")
Stationary_Check(v_RBO_Temp_task_b_TS, "Temperature - ACF plot", "Temperature - PACF plot")
Stationary_Check(v_RBO_Radiation_task_b_TS, "Radiation - ACF plot", "Radiation - PACF plot")
Stationary_Check(v_RBO_Rainfall_task_b_TS, "Rainfall - ACF plot", "Rainfall - PACF plot")
Stationary_Check(v_RBO_RelHumidity_TS, "Relative Humidity - ACF plot", "Relative Humidity - PACF plot")
# Calculating the correlation coefficient
cor(v_RBO_data_task_b_TS, v_RBO_Temp_task_b_TS)
cor(v_RBO_data_task_b_TS, v_RBO_Rainfall_task_b_TS)
cor(v_RBO_data_task_b_TS, v_RBO_Radiation_task_b_TS)
cor(v_RBO_data_task_b_TS, v_RBO_RelHumidity_task_b_TS)
v_data_TS_44 <- ts(v_RBO_data_task_b, start = 1997, frequency = 1)
colnames(v_data_TS_44) <- c("x1", "y", "x2", "x3", "x4", "x5")
v_rel_hum_dyna_taskb <- dynlm(y ~ x3, data = data.frame(v_data_TS_44))
summary(v_rel_hum_dyna_taskb)
res_analysis(residuals(v_rel_hum_dyna_taskb))
v_rain_dyna_taskb <- dynlm(y ~ x4, data = data.frame(v_data_TS_44))
summary(v_rain_dyna_taskb)
v_rain_dyna_taskb <- dynlm(y ~ x5, data = data.frame(v_data_TS_44))
summary(v_rain_dyna_taskb)
v_rad_dyna_taskb <- dynlm(y ~ x4, data = data.frame(v_data_TS_44))
summary(v_rad_dyna_taskb)
v_rel_hum_dyna_taskb <- dynlm(y ~ x2, data = data.frame(v_data_TS_44))
summary(v_rel_hum_dyna_taskb)
v_temp_dyna_taskb <- dynlm(y ~ x2, data = data.frame(v_data_TS_44))
summary(v_temp_dyna_taskb)
v_RBO_data <- read.csv("RBO.csv", header = TRUE)
head(v_RBO_data)
v_RBO_data_task_b <- tail(v_RBO_data, -13)
v_RBO_data_task_b <- head(v_RBO_data_task_b, -5)
head(v_RBO_data_task_b)
# Using str() to check the type of each column.
str(v_RBO_data_task_b)
colSums(is.na(v_RBO_data_task_b))
class(v_RBO_data_task_b)
v_RBO_Temp_task_b_TS <- ts(v_RBO_data_task_b$Temperature, start = c(1997), frequency = 1)
v_RBO_Rainfall_task_b_TS <- ts(v_RBO_data_task_b$Rainfall, start = c(1997), frequency = 1)
v_RBO_Radiation_task_b_TS <- ts(v_RBO_data_task_b$Radiation, start = c(1997), frequency = 1)
v_RBO_RelHumidity_task_b_TS <- ts(v_RBO_data_task_b$RelHumidity, start = c(1997), frequency = 1)
v_RBO_data_task_b_TS <- ts(v_RBO_data_task_b$RBO, start = c(1997), frequency = 1)
class(v_RBO_Temp_task_b_TS)
class(v_RBO_Rainfall_task_b_TS)
class(v_RBO_Radiation_task_b_TS)
class(v_RBO_RelHumidity_task_b_TS)
class(v_RBO_data_task_b_TS)
plot(v_RBO_data_task_b_TS, type = "b", xlab = "years", ylab = "Rank-based Order similarity metric", main = "Time series plot for yearly Rank-based Order similarity metric during the Millennium Drought (1997 – 2009) (13 years)", pch = 1)
legend("topleft", inset = .03, title = "Rank-based Order similarity metric", legend = "Rank-based Order similarity metric series", horiz = TRUE, cex = 0.8, lty = 1, box.lty = 2, box.lwd = 2, pch = 1)
McLeod.Li.test(y = v_RBO_data_task_b_TS, main = "McLeod-Li Test Statistics for Rank-based Order similarity metric.")
plot(v_RBO_Temp_task_b_TS, type = "b", xlab = "years", ylab = "Temperature", main = "Time series plot for yearly temperature during the Millennium Drought (1997 – 2009) (13 years)", pch = 1)
legend("top", inset = .03, title = "Temperature", legend = "Temperature series", horiz = TRUE, cex = 0.8, lty = 1, box.lty = 2, box.lwd = 2, pch = 1)
McLeod.Li.test(y = v_RBO_Temp_task_b_TS, main = "McLeod-Li Test Statistics for Temperature")
plot(v_RBO_Rainfall_task_b_TS, type = "b", xlab = "years", ylab = "Rainfall", main = "Time series plot for yearly Rainfall during the Millennium Drought (1997 – 2009) (13 years)", pch = 1)
legend("bottom", inset = .03, title = "Rainfall", legend = "Rainfall series", horiz = TRUE, cex = 0.8, lty = 1, box.lty = 2, box.lwd = 2, pch = 1)
McLeod.Li.test(y = v_RBO_Rainfall_task_b_TS, main = "McLeod-Li Test Statistics for Rainfall")
plot(v_RBO_Radiation_task_b_TS, type = "b", xlab = "years", ylab = "Radiation", main = "Time series plot for yearly Radiation during the Millennium Drought (1997 – 2009) (13 years)", pch = 1)
legend("topleft", inset = .03, title = "Radiation", legend = "Radiation series", horiz = TRUE, cex = 0.8, lty = 1, box.lty = 2, box.lwd = 2, pch = 1)
McLeod.Li.test(y = v_RBO_Rainfall_task_b_TS, main = "McLeod-Li Test Statistics for Radiation")
plot(v_RBO_RelHumidity_task_b_TS, type = "b", xlab = "years", ylab = "Relative Humidity", main = "Time series plot for yearly Relative Humidity during the Millennium Drought (1997 – 2009) (13 years)", pch = 1)
legend("topright", inset = .03, title = "Relative Humidity", legend = "Relative Humidity series", horiz = TRUE, cex = 0.8, lty = 1, box.lty = 2, box.lwd = 2, pch = 1)
McLeod.Li.test(y = v_RBO_RelHumidity_TS, main = "McLeod-Li Test Statistics for Relative Humidity")
Stationary_Check(v_RBO_data_task_b_TS, "Rank-based Order similarity metric - ACF plot", "Rank-based Order similarity metric - PACF plot")
Stationary_Check(v_RBO_Temp_task_b_TS, "Temperature - ACF plot", "Temperature - PACF plot")
Stationary_Check(v_RBO_Radiation_task_b_TS, "Radiation - ACF plot", "Radiation - PACF plot")
Stationary_Check(v_RBO_Rainfall_task_b_TS, "Rainfall - ACF plot", "Rainfall - PACF plot")
Stationary_Check(v_RBO_RelHumidity_TS, "Relative Humidity - ACF plot", "Relative Humidity - PACF plot")
# Calculating the correlation coefficient
cor(v_RBO_data_task_b_TS, v_RBO_Temp_task_b_TS)
cor(v_RBO_data_task_b_TS, v_RBO_Rainfall_task_b_TS)
cor(v_RBO_data_task_b_TS, v_RBO_Radiation_task_b_TS)
cor(v_RBO_data_task_b_TS, v_RBO_RelHumidity_task_b_TS)
v_data_TS_44 <- ts(v_RBO_data_task_b, start = 1997, frequency = 1)
colnames(v_data_TS_44) <- c("x1", "y", "x2", "x3", "x4", "x5")
v_rain_dyna_taskb <- dynlm(y ~ x5, data = data.frame(v_data_TS_44))
summary(v_rain_dyna_taskb)
v_rel_hum_dyna_taskb <- dynlm(y ~ x3, data = data.frame(v_data_TS_44))
summary(v_rel_hum_dyna_taskb)
v_rad_dyna_taskb <- dynlm(y ~ x3, data = data.frame(v_data_TS_44))
summary(v_rad_dyna_taskb)
v_temp_dyna_taskb <- dynlm(y ~ x2, data = data.frame(v_data_TS_44))
summary(v_temp_dyna_taskb)
fit <-holt(v_RBO_data_task_b_TS, initial="simple", exponential=TRUE, h = 3*frequency(v_RBO_data_task_b_TS))
v_solar_forecasts <- ts.intersect(ts(fit$lower[, 2], start = c(2010), frequency = 1), ts(fit$mean, start = c(2010), frequency = 1), ts(fit$upper[, 2], start = c(2010), frequency = 1))
colnames(v_solar_forecasts) <- c("Lower bound", "Point forecast", "Upper bound")
v_solar_forecasts
plot(fit, fcol = "white", main = "Forecast of Solar radiation series for the next 2 years (2015, 2018)", ylab = "Solar Radiation")
lines(fitted(fit), col = "red")
lines(fit$mean, col = "blue", lwd = 2)
legend("bottom", inset = .03, cex = 0.9, box.lty = 2, box.lwd = 2, pch = 1, lty = 1, col = c("red", "blue"), c("Data", "Forecasts"))
v_rad_dyna_taskb <- dynlm(y ~ x4, data = data.frame(v_data_TS_44))
summary(v_rad_dyna_taskb)
knitr::opts_chunk$set(echo = TRUE)
v_RBOr_forecasts_POLY <- forecast(PolyDLM_model_Rain, h = 3)
v_RBOr_forecasts_POLY <- forecast(model = PolyDLM_model_Rain , x = v_RBO_data_TS , h = 2 ,
interval = FALSE)
attr(PolyDLM_model_Rain$model, "class") = "lm"
v_RBOr_forecasts_POLY <- forecast(model = PolyDLM_model_Rain , x = v_RBO_data_TS , h = 2 ,
interval = FALSE)
attr(PolyDLM_model_Rain$model, "class") = "lm"
v_RBOr_forecasts_POLY <- forecast(model = PolyDLM_model_Rain$model , x = v_RBO_data_TS , h = 2 ,
interval = FALSE)
# Ploynomial DLM
PolyDLM_model_Rain = polyDlm(x = as.vector(x1), y = as.vector(y), q = 1, k = 1, show.beta = TRUE)
summary(PolyDLM_model_Rain)
v_RBOr_forecasts_POLY <- forecast(model = PolyDLM_model_Rain$model , x = v_RBO_data_TS , h = 2 ,
interval = FALSE)
v_RBOr_forecasts_POLY <- forecast(model = PolyDLM_model_temp$model , x = v_RBO_data_TS , h = 2 ,
interval = FALSE)
v_RBOr_forecasts_POLY <- forecast(model = AR_DLM_Rain_53 , x = v_RBO_data_TS , h = 2 ,
interval = FALSE)
v_RBOr_forecasts_POLY <- forecast(model = AR_DLM_Rain_53$model , x = v_RBO_data_TS , h = 2 ,
interval = FALSE)
v_RBOr_forecasts_POLY <- forecast(model = v_rain_dyna, x = v_RBO_data_TS , h = 2 ,
interval = FALSE)
h = 3
v_time = time(PolyDLM_model_Rain$model)
new = data.frame(v_time = seq((max(v_time) + 1), (max(v_time) + h), 1))
new$v_time2 = new$v_time^2
# Predicting from new data.
v_pred = predict(PolyDLM_model_Rain$model, new, interval = "prediction")
h = 3
v_time = time(PolyDLM_model_Rain$model)
new = data.frame(v_time = seq((max(v_time) + 1), (max(v_time) + h), 1))
new$v_time2 = new$v_time^2
# Predicting from new data.
v_pred = predict(PolyDLM_model_Rain, new, interval = "prediction")
h = 3
v_time = time(PolyDLM_model_Rain$model)
new = data.frame(v_time = seq((max(v_time) + 1), (max(v_time) + h), 1))
new$v_time2 = new$v_time^2
# Predicting from new data.
v_pred = predict(rstudent(PolyDLM_model_Rain), new, interval = "prediction")
h = 3
v_time = time(PolyDLM_model_Rain$model)
new = data.frame(v_time = seq((max(v_time) + 1), (max(v_time) + h), 1))
new$v_time2 = new$v_time^2
# Predicting from new data.
v_pred = predict(rstudent(PolyDLM_model_Rain$model), new, interval = "prediction")
h = 3
v_time = time(PolyDLM_model_Rain$model)
new = data.frame(v_time = seq((max(v_time) + 1), (max(v_time) + h), 1))
new$v_time2 = new$v_time^2
# Predicting from new data.
v_RBOr_forecasts_POLY <- forecast(model = v_rain_dyna, x = new , h = 2 ,
interval = FALSE)
new
plot(fit2, fcol = "white", main = "Forecast of RBO series for the next 3 years (2014, 2017)", ylab = "RBO")
plot(PolyDLM_model_Rain, fcol = "white", main = "Forecast of RBO series for the next 3 years (2014, 2017)", ylab = "RBO")
plot(fit1, fcol = "white", main = "Forecast of RBO series for the next 3 years (2014, 2017)", ylab = "RBO")
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(forecast) # Forecasting Functions for Time Series and Linear Models. [1] - https://cran.r-project.org/web/packages/forecast/index.html
library(dLagM) # Distributed lag model.
library(lmtest) # Testing Linear Regression Models. [2] - https://cran.r-project.org/web/packages/lmtest/index.html
library(tidyr)
library(tseries) # Time Series Analysis and Computational Finance.[3] - https://cran.r-project.org/web/packages/tseries/index.html
library(fUnitRoots) # To analyze trends and unit roots in financial time series. [4] - https://cran.r-project.org/web/packages/fUnitRoots/index.html
library(expsmooth) # Forecasting with Exponential Smoothing. [5] - https://cran.r-project.org/web/packages/expsmooth/index.html
library(TSA) # Time Series Analysis.
library(urca) # Unit Root and Cointegration Tests. [7] - https://cran.r-project.org/web/packages/urca/index.html
library(readr)
library(xts)
v_Mortality_data <- read.csv("mort.csv", header = TRUE)
head(v_Mortality_data)
# Using str() to check the type of each column.
str(v_Mortality_data)
colSums(is.na(v_Mortality_data))
class(v_Mortality_data)
v_Mortality_data_TS <- ts(v_Mortality_data$mortality, start = c(2010, 1), frequency = (365.27/7))
v_Mortality_temp_data_TS <- ts(v_Mortality_data$temp, start = c(2010, 1), frequency = (365.27/7))
v_Mortality_chem1_data_TS <- ts(v_Mortality_data$chem1, start = c(2010, 1), frequency = (365.27/7))
v_Mortality_chem2_data_TS <- ts(v_Mortality_data$chem2, start = c(2010, 1), frequency = (365.27/7))
v_Mortality_particle.size_data_TS <- ts(v_Mortality_data$particle.size, start = c(2010, 1), frequency = (365.27/7))
class(v_Mortality_data_TS)
class(v_Mortality_temp_data_TS)
class(v_Mortality_chem1_data_TS)
class(v_Mortality_chem2_data_TS)
class(v_Mortality_particle.size_data_TS)
plot(v_Mortality_data_TS, type = "b", xlab = "weeks", ylab = "Mortality rate", main = "Time series plot for mortality rate from 2010 to 2020 (508 weeks)", pch = 1)
legend("topright", inset = .03, title = "Rate", legend = "Mortality rate series", horiz = TRUE, cex = 0.8, lty = 1, box.lty = 2, box.lwd = 2, pch = 1)
McLeod.Li.test(y = v_Mortality_data_TS, main = "McLeod-Li Test Statistics for Mortality Rate.")
plot(v_Mortality_temp_data_TS, type = "b", xlab = "weeks", ylab = "Temperature", main = "Time series plot for temperature from 2010 to 2020 (508 weeks)", pch = 1)
legend("top", inset = .03, title = "Temperature", legend = "Temperature series", horiz = TRUE, cex = 0.6, lty = 1, box.lty = 2, box.lwd = 2, pch = 1)
McLeod.Li.test(y = v_Mortality_temp_data_TS, main = "McLeod-Li Test Statistics for Temperature")
plot(v_Mortality_chem1_data_TS, type = "b", xlab = "weeks", ylab = "Chemical Emission 1", main = "Time series plot for Chemical Emission 1 from 2010 to 2020 (508 weeks)", pch = 1)
legend("topright", inset = .03, title = "Chemical Emission 1", legend = "Chemical Emission 1 series", horiz = TRUE, cex = 0.8, lty = 1, box.lty = 2, box.lwd = 2, pch = 1)
McLeod.Li.test(y = v_Mortality_chem1_data_TS, main = "McLeod-Li Test Statistics for Chemical Emission 1.")
plot(v_Mortality_chem2_data_TS, type = "b", xlab = "weeks", ylab = "Chemical Emission 2", main = "Time series plot for Chemical Emission 2 from 2010 to 2020 (508 weeks)", pch = 1)
legend("topright", inset = .03, title = "Chemical Emission 2", legend = "Chemical Emission 2 series", horiz = TRUE, cex = 0.8, lty = 1, box.lty = 2, box.lwd = 2, pch = 1)
McLeod.Li.test(y = v_Mortality_chem2_data_TS, main = "McLeod-Li Test Statistics for Chemical Emission 2.")
plot(v_Mortality_particle.size_data_TS, type = "b", xlab = "weeks", ylab = "Partical size", main = "Time series plot for from 2010 to 2020 (508 weeks)", pch = 1)
legend("topleft", inset = .03, title = "Partical size", legend = "Partical size", horiz = TRUE, cex = 0.8, lty = 1, box.lty = 2, box.lwd = 2, pch = 1)
McLeod.Li.test(y = v_Mortality_particle.size_data_TS, main = "McLeod-Li Test Statistics for Partical size")
# Function to check Stationary on the series.
Stationary_Check <- function(x, m1, m2) {
# Analysing trends by plotting ACF and PACF.
par(mfrow = c(1,2))
acf(x, main = m1)
pacf(x, main = m2)
# Lag for ADF test
d = ar(x)$order
# Conducting Augmented Dickey-Fuller test.
adf.test(x, k = d)
}
Stationary_Check(v_Mortality_data_TS, "Mortality Rate - ACF plot", "Mortality Rate - PACF plot")
Stationary_Check(v_Mortality_temp_data_TS, "Temperature - ACF plot", "Temperature - PACF plot")
Stationary_Check(v_Mortality_chem1_data_TS, "Chemical Emission 1 - ACF plot", "Chemical Emission 1 - PACF plot")
Stationary_Check(v_Mortality_chem2_data_TS, "Chemical Emission 2 - ACF plot", "Chemical Emission 2 - PACF plot")
Stationary_Check(v_Mortality_particle.size_data_TS, "Particle Size - ACF plot", "Particle Size - PACF plot")
plot(v_Mortality_particle.size_data_TS, type = "b", xlab = "weeks", ylab = "Partical size", main = "Time series plot for Partical size from 2010 to 2020 (508 weeks)", pch = 1)
legend("topleft", inset = .03, title = "Partical size", legend = "Partical size", horiz = TRUE, cex = 0.8, lty = 1, box.lty = 2, box.lwd = 2, pch = 1)
v_First_Flowering_Day_data <- read.csv("FFD.csv", header = TRUE)
head(v_First_Flowering_Day_data)
# Using str() to check the type of each column.
str(v_First_Flowering_Day_data)
colSums(is.na(v_First_Flowering_Day_data))
class(v_First_Flowering_Day_data)
v_First_Flowering_Day_Temp_TS <- ts(v_First_Flowering_Day_data$Temperature, start = 1984, frequency = 1)
v_First_Flowering_Day_Rainfall_TS <- ts(v_First_Flowering_Day_data$Rainfall, start = 1984, frequency = 1)
v_First_Flowering_Day_Radiation_TS <- ts(v_First_Flowering_Day_data$Radiation, start = 1984, frequency = 1)
v_First_Flowering_Day_RelHumidity_TS <- ts(v_First_Flowering_Day_data$RelHumidity, start = 1984, frequency = 1)
v_First_Flowering_Day_data_TS <- ts(v_First_Flowering_Day_data$FFD, start = 1984, frequency = 1)
class(v_First_Flowering_Day_Temp_TS)
class(v_First_Flowering_Day_Rainfall_TS)
class(v_First_Flowering_Day_Radiation_TS)
class(v_First_Flowering_Day_RelHumidity_TS)
class(v_First_Flowering_Day_data_TS)
plot(v_First_Flowering_Day_data_TS, type = "b", xlab = "years", ylab = "First Flowering Day", main = "Time series plot for yearly First Flowering Day data from 1984 – 2014 (31 years)", pch = 1)
legend("topright", inset = .03, title = "First Flowering Day", legend = "First Flowering Day series", horiz = TRUE, cex = 0.8, lty = 1, box.lty = 2, box.lwd = 2, pch = 1)
McLeod.Li.test(y = v_First_Flowering_Day_data_TS, main = "McLeod-Li Test Statistics for First Flowering Day.")
plot(v_First_Flowering_Day_Temp_TS, type = "b", xlab = "years", ylab = "Temperature", main = "Time series plot for yearly temperature from 1984 – 2014 (31 years)", pch = 1)
legend("top", inset = .03, title = "Temperature", legend = "Temperature series", horiz = TRUE, cex = 0.8, lty = 1, box.lty = 2, box.lwd = 2, pch = 1)
plot(v_First_Flowering_Day_Rainfall_TS, type = "b", xlab = "years", ylab = "Rainfall", main = "Time series plot for yearly Rainfall from 1984 – 2014 (31 years)", pch = 1)
legend("bottomleft", inset = .03, title = "Rainfall", legend = "Rainfall series", horiz = TRUE, cex = 0.8, lty = 1, box.lty = 2, box.lwd = 2, pch = 1)
plot(v_First_Flowering_Day_Radiation_TS, type = "b", xlab = "years", ylab = "Radiation", main = "Time series plot for yearly Radiation from 1984 – 2014 (31 years)", pch = 1)
legend("topleft", inset = .03, title = "Radiation", legend = "Radiation series", horiz = TRUE, cex = 0.8, lty = 1, box.lty = 2, box.lwd = 2, pch = 1)
plot(v_First_Flowering_Day_RelHumidity_TS, type = "b", xlab = "years", ylab = "Relative Humidity", main = "Time series plot for yearly Relative Humidity from 1984 – 2014 (31 years)", pch = 1)
legend("bottomright", inset = .03, title = "Relative Humidity", legend = "Relative Humidity series", horiz = TRUE, cex = 0.8, lty = 1, box.lty = 2, box.lwd = 2, pch = 1)
v_RBO_data <- read.csv("RBO.csv", header = TRUE)
head(v_RBO_data)
colSums(is.na(v_RBO_data))
class(v_RBO_data)
class(v_RBO_Temp_TS)
class(v_RBO_Rainfall_TS)
class(v_RBO_Radiation_TS)
class(v_RBO_RelHumidity_TS)
class(v_RBO_data_TS)
plot(v_RBO_data_TS, type = "b", xlab = "years", ylab = "Rank-based Order similarity metric", main = "Time series plot for yearly Rank-based Order similarity metric from 1984 – 2014 (31 years)", pch = 1)
legend("topright", inset = .03, title = "Rank-based Order similarity metric", legend = "Rank-based Order similarity metric series", horiz = TRUE, cex = 0.8, lty = 1, box.lty = 2, box.lwd = 2, pch = 1)
McLeod.Li.test(y = v_RBO_data_TS, main = "McLeod-Li Test Statistics for Rank-based Order similarity metric.")
plot(v_RBO_Temp_TS, type = "b", xlab = "years", ylab = "Temperature", main = "Time series plot for yearly temperature from 1984 – 2014 (31 years)", pch = 1)
legend("top", inset = .03, title = "Temperature", legend = "Temperature series", horiz = TRUE, cex = 0.8, lty = 1, box.lty = 2, box.lwd = 2, pch = 1)
plot(v_RBO_Rainfall_TS, type = "b", xlab = "years", ylab = "Rainfall", main = "Time series plot for yearly Rainfall from 1984 – 2014 (31 years)", pch = 1)
legend("bottomleft", inset = .03, title = "Rainfall", legend = "Rainfall series", horiz = TRUE, cex = 0.8, lty = 1, box.lty = 2, box.lwd = 2, pch = 1)
plot(v_RBO_Radiation_TS, type = "b", xlab = "years", ylab = "Radiation", main = "Time series plot for yearly Radiation from 1984 – 2014 (31 years)", pch = 1)
legend("topleft", inset = .03, title = "Radiation", legend = "Radiation series", horiz = TRUE, cex = 0.8, lty = 1, box.lty = 2, box.lwd = 2, pch = 1)
plot(v_RBO_RelHumidity_TS, type = "b", xlab = "years", ylab = "Relative Humidity", main = "Time series plot for yearly Relative Humidity from 1984 – 2014 (31 years)", pch = 1)
legend("bottomright", inset = .03, title = "Relative Humidity", legend = "Relative Humidity series", horiz = TRUE, cex = 0.8, lty = 1, box.lty = 2, box.lwd = 2, pch = 1)
v_RBO_data_task_b <- tail(v_RBO_data, -13)
v_RBO_data_task_b <- head(v_RBO_data_task_b, -5)
head(v_RBO_data_task_b)
plot(v_RBO_data_task_b_TS, type = "b", xlab = "years", ylab = "Rank-based Order similarity metric", main = "Time series plot for yearly Rank-based Order similarity metric during the Millennium Drought (1997 – 2009) (13 years)", pch = 1)
legend("topleft", inset = .03, title = "Rank-based Order similarity metric", legend = "Rank-based Order similarity metric series", horiz = TRUE, cex = 0.8, lty = 1, box.lty = 2, box.lwd = 2, pch = 1)
McLeod.Li.test(y = v_RBO_data_task_b_TS, main = "McLeod-Li Test Statistics for Rank-based Order similarity metric.")
plot(v_RBO_Temp_task_b_TS, type = "b", xlab = "years", ylab = "Temperature", main = "Time series plot for yearly temperature during the Millennium Drought (1997 – 2009) (13 years)", pch = 1)
legend("top", inset = .03, title = "Temperature", legend = "Temperature series", horiz = TRUE, cex = 0.8, lty = 1, box.lty = 2, box.lwd = 2, pch = 1)
plot(v_RBO_Rainfall_task_b_TS, type = "b", xlab = "years", ylab = "Rainfall", main = "Time series plot for yearly Rainfall during the Millennium Drought (1997 – 2009) (13 years)", pch = 1)
legend("bottom", inset = .03, title = "Rainfall", legend = "Rainfall series", horiz = TRUE, cex = 0.8, lty = 1, box.lty = 2, box.lwd = 2, pch = 1)
plot(v_RBO_Radiation_task_b_TS, type = "b", xlab = "years", ylab = "Radiation", main = "Time series plot for yearly Radiation during the Millennium Drought (1997 – 2009) (13 years)", pch = 1)
legend("topleft", inset = .03, title = "Radiation", legend = "Radiation series", horiz = TRUE, cex = 0.8, lty = 1, box.lty = 2, box.lwd = 2, pch = 1)
plot(v_RBO_RelHumidity_task_b_TS, type = "b", xlab = "years", ylab = "Relative Humidity", main = "Time series plot for yearly Relative Humidity during the Millennium Drought (1997 – 2009) (13 years)", pch = 1)
legend("topright", inset = .03, title = "Relative Humidity", legend = "Relative Humidity series", horiz = TRUE, cex = 0.8, lty = 1, box.lty = 2, box.lwd = 2, pch = 1)
